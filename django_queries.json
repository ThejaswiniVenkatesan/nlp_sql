{
    "Total no of machines offline in cell 1 today": "Machine.objects.filter(cell=\"cell 1\", status=\"offline\").count()",
    "Total no of machines active in cell 1 today": "Machine.objects.filter(cell=\"cell 1\", status=\"active\").count()",
    "Total no of machines idle in cell 1 today": "Machine.objects.filter(cell=\"cell 1\", status=\"idle\").count()",
    "show me Machine with the highest downtime in site 1 padi": "Downtime.objects.filter(machine__cell='site 1 padi').values('machine__name').annotate(total=models.Sum('duration')).order_by('-total').first()",
    "Machine with the highest downtime in cell 2": "Downtime.objects.filter(machine__cell='cell 2').values('machine__name').annotate(total=models.Sum('duration')).order_by('-total').first()",
    "what is the total downtime of C-12 machine this month": "Downtime.objects.filter(machine__name='C-12', start_time__month=timezone.now().month).aggregate(models.Sum('duration'))",
    "Machine with the most breakdown this month": "Breakdown.objects.filter(date__month=timezone.now().month).values('machine__name').annotate(count=models.Count('id')).order_by('-count').first()",
    "Total production of part no B 11458 in V-12 machine this month": "Production.objects.filter(machine__name='V-12', part_no='B 11458', date__month=timezone.now().month).aggregate(models.Sum('quantity'))",
    "total active time of C-12 machine yesterday shift 1": "MachineActivity.objects.filter(machine__name='C-12', shift=1, date=timezone.now().date() - timezone.timedelta(days=1)).aggregate(models.Sum('active_time_minutes'))",
    "OEE percetange of v-12 machine from 2-06-25 to 08-06-25": "OEE.objects.filter(machine__name='V-12', date__range=['2025-06-02', '2025-06-08']).aggregate(models.Avg('percentage'))",
    "All users with superuser role": "User.objects.filter(role='superuser').values_list('username', flat=True)",
    "assets which have been scrapped": "Machine.objects.filter(is_scrapped=True).values_list('name', flat=True)",
    "All currently running part and operation": "Operation.objects.filter(is_running=True).values('machine__name', 'part_no', 'operation_name')",
    "show me machines with the lowest OEE": "OEE.objects.values('machine__name').order_by('percentage')[:5]",
    "show me machines with oee above 80%": "OEE.objects.filter(percentage__gt=80).values('machine__name', 'percentage')",
    "show me production count yet": "Production.objects.aggregate(models.Sum('quantity'))",
    "How many machines are currently marked as Active?": "Machine.objects.filter(status='active').count()",
    "Show all Idle machines in Site 1.": "Machine.objects.filter(cell='site 1', status='idle')",
    "List all Offline machines across all cells.": "Machine.objects.filter(status='offline')",
    "Get the number of machines in Shutdown mode.": "Machine.objects.filter(status='shutdown').count()",
    "Fetch machines with status Not Active.": "Machine.objects.filter(status='not active')",
    "Which assets are currently in Idle status in Site 3?": "Machine.objects.filter(cell='site 3', status='idle')",
    "Count all Active assets in Cell 2.": "Machine.objects.filter(cell='cell 2', status='active').count()",
    "What machines were updated today and are Offline?": "Machine.objects.filter(status='offline', updated_at=timezone.now().date())",
    "Retrieve all Active machines from PasP40Asset.": "Machine.objects.filter(status='active')",
    "How many assets are marked as Idle right now?": "Machine.objects.filter(status='idle').count()",
    "Find all machines that are currently shut down.": "Machine.objects.filter(status='shutdown')",
    "Get total number of Offline machines in Site 2.": "Machine.objects.filter(cell='site 2', status='offline').count()",
    "Which assets have Machine Status as Active in Site 1?": "Machine.objects.filter(status='active', cell='site 1')",
    "Show machine IDs that are not Active.": "Machine.objects.exclude(status='active').values('id')",
    "Get the machines where Machine_Status is 'Shutdown'.": "Machine.objects.filter(status='shutdown')",
    "List machines marked as 'Idle' and updated today.": "Machine.objects.filter(status='idle', updated_at=timezone.now().date())",
    "How many assets are running in Site 1?": "Machine.objects.filter(status='active', cell='site 1').count()",
    "Machines that have been idle for over 1 hour?": "MachineActivity.objects.filter(active_time_minutes__lt=60).values('machine__name')",
    "What are all the Offline assets listed today?": "Machine.objects.filter(status='offline', updated_at=timezone.now().date())",
    "Get assets with P40_Machine_Status as 'Idle'.": "Machine.objects.filter(status='idle')",
    "Retrieve count of Active assets by Site.": "Machine.objects.filter(status='active').values('cell').annotate(total=models.Count('id'))",
    "Machines showing 'Not Active' in P40_Machine_Status.": "Machine.objects.filter(status='not active')",
    "Total number of assets that were updated and are Idle.": "Machine.objects.filter(status='idle', updated_at__isnull=False).count()",
    "How many machines are Active but not in Site 1?": "Machine.objects.filter(status='active').exclude(cell='site 1').count()",
    "Show all Offline machines along with last update time.": "Machine.objects.filter(status='offline').values('name', 'updated_at')",
    "Machines in PasP40Asset where status is Idle.": "Machine.objects.filter(status='idle')",
    "Fetch count of Idle machines grouped by Site ID.": "Machine.objects.filter(status='idle').values('cell').annotate(count=models.Count('id'))",
    "List asset IDs that are shutdown in Site 3.": "Machine.objects.filter(status='shutdown', cell='site 3').values('id')",
    "Machines from PasP40Asset with P40_Is_Active = 0 and status Idle.": "Machine.objects.filter(is_scrapped=True, status='idle')",
    "Assets that are Offline and belong to Site 2.": "Machine.objects.filter(status='offline', cell='site 2')"
}